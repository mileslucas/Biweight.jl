var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Biweight","category":"page"},{"location":"#Biweight.jl","page":"Home","title":"Biweight.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Code) (Image: Build Status) (Image: PkgEval) (Image: Coverage) (Image: License)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Robust statistics based on the biweight transform.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Biweight.jl can be installed using the Julia package manager. From the Julia REPL, enter Pkg mode (by pressing ])","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia>]\n\npkg> add https://github.com/mileslucas/Biweight.jl","category":"page"},{"location":"","page":"Home","title":"Home","text":"To exit Pkg mode, just backspace. Once the package is installed it can be imported with","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using Biweight","category":"page"},{"location":"","page":"Home","title":"Home","text":"To exit Pkg mode, just backspace. Once the package is installed it can be imported with For more information, see the Pkg documentation.","category":"page"},{"location":"#API/Reference","page":"Home","title":"API/Reference","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Biweight","category":"page"},{"location":"#Biweight.Biweight","page":"Home","title":"Biweight.Biweight","text":"Biweight\n\nA module for robust statistics based on the biweight transform.[1]\n\nBiweight Statistics\n\nThe basis of the biweight transform is robust analysis, that is, statistics which are resilient to outliers while still efficiently representing a variety of underlying distributions. The biweight transform is based off the median and the median absolute deviation (MAD). The median is a robust estimator of location, and the MAD is a robust estimator of scale\n\nmathrmMAD(X) = mathrmmedianleftX_i - barXright\n\nwhere barX is the median.\n\nThe biweight transform improves upon these estimates by filtering out data beyond a critical cutoff. The analogy is doing a sigma-filter, but using these robust statistics instead of the standard deviation and mean.\n\nu_i = fracX_i - barXc cdot mathrmMAD\n\nforall i quadmathrmwherequadleft u_i right  1\n\nThe cutoff factor, c, can be directly related to a Gaussian standard-deviation by multiplying by 1.48. So a typical value of c=6 means outliers further than sim 9sigma are clipped. In addition, in Biweight, we also skip NaNs.\n\nReferences\n\n[1]: NIST: biweight\n\nMethods\n\nlocation\nscale\nmidvar\nmidcov\nmidcor\n\n\n\n\n\n","category":"module"},{"location":"","page":"Home","title":"Home","text":"location\nscale\nmidvar\nmidcov\nmidcor","category":"page"},{"location":"#Biweight.location","page":"Home","title":"Biweight.location","text":"location(X; c=6, maxiter=10, tol=1e-6)\n\nIteratively calculate the biweight location, a robust measure of location.\n\nStopping Criteria\n\nThe location will be refined until maxiter is reached or until the absolute change between estimates is below tol.\n\nExamples\n\njulia> X = 10 .* randn(rng, 10) .+ 50;\n\njulia> location(X)\n49.483640367304304\n\nReferences\n\nNIST: biweight location\n\n\n\n\n\n","category":"function"},{"location":"#Biweight.scale","page":"Home","title":"Biweight.scale","text":"scale(X; c=6)\n\nCompute the biweight midvariance of the variable.\n\nExamples\n\njulia> X = 10 .* randn(rng, 10) .+ 50;\n\njulia> scale(X)\n9.269099543377779\n\nReferences\n\nNIST: biweight scale\n\nSee Also\n\nmidcor, midvar, midcov\n\n\n\n\n\n","category":"function"},{"location":"#Biweight.midvar","page":"Home","title":"Biweight.midvar","text":"midvar(X; c=6)\n\nCompute the biweight midvariance of the variable.\n\nExamples\n\njulia> X = 10 .* randn(rng, 10) .+ 50;\n\njulia> midvar(X)\n70.53324162560791\n\nReferences\n\nNIST: biweight midvariance\n\nSee Also\n\nscale, midcor, midcov\n\n\n\n\n\n","category":"function"},{"location":"#Biweight.midcov","page":"Home","title":"Biweight.midcov","text":"midcov(X::AbstractVector, [Y::AbstractVector]; c=6)\n\nComputes biweight midcovariance between the two vectors. If only one vector is provided the biweight midvariance will be calculated.\n\nExamples\n\njulia> X = 10 .* randn(rng, 10, 2) .+ 50;\n\njulia> midcov(X[:, 1], X[:, 2])\n-25.644749715907157\n\njulia> midcov(X[:, 1]) ≈ midvar(X[:, 1])\ntrue\n\nReferences\n\nNIST: biweight midcovariance\n\nSee Also\n\nscale, midvar, midcor\n\n\n\n\n\nmidcov(X::AbstractMatrix; dims=1, c=6)\n\nComputes the variance-covariance matrix using the biweight midcovariance. By default, each column is a separate variable, so an (M, N) matrix with dims=1 will create an (N, N) covariance matrix. If dims=2, though, each row will become a variable, leading to an (M, M) covariance matrix.\n\nExamples\n\njulia> X = 10 .* randn(rng, 5, 3) .+ 50;\n\njulia> C = midcov(X)\n3×3 Matrix{Float64}:\n 214.707   -38.4913   38.2848\n -38.4913   35.6904  -18.5234\n  38.2848  -18.5234   77.4838\n\njulia> midcov(X; dims=2)\n5×5 Matrix{Float64}:\n  7.10619   13.7261     26.8059    2.28917   -0.640045\n 13.7261    26.6125     52.0541    1.31522   -0.367732\n 26.8059    52.0541    327.443   -83.8513    70.6212\n  2.28917    1.31522   -83.8513  128.887    -53.5744\n -0.640045  -0.367732   70.6212  -53.5744    29.7501\n\nReferences\n\nNIST: biweight midcovariance\n\nSee Also\n\nscale, midvar, midcor\n\n\n\n\n\n","category":"function"},{"location":"#Biweight.midcor","page":"Home","title":"Biweight.midcor","text":"midcor(X::AbstractVector, Y::AbstractVector; c=6)\n\nCompute the correlation between two variables using the midvariance and midcovariances.\n\nfracs_xysqrts_xx cdot s_yy\n\nwhere s_xxs_yy are the midvariances of each vector, and s_xy is the midcovariance of the two vectors.\n\nExamples\n\njulia> X = 10 .* randn(rng, 10, 2) .+ 50;\n\njulia> midcor(X[:, 1], X[:, 2])\n-0.22014156692229941\n\nReferences\n\nWikipedia\nNIST: Biweight midcorrelation\n\nSee Also\n\nmidvar, midcov, scale\n\n\n\n\n\n","category":"function"},{"location":"#Related-packages","page":"Home","title":"Related packages","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"StatsBase.jl\nContains a couple robust statistics, but has no overlapping functionality with this package.\nRobustStats.jl\nContains many more robust statistics primarily based on the WRS R package. Appears to be unmaintained and not updated to Julia v1. The bivar function is the same as this package's midvar, although bivar does not have definitions for the statistics across axes of an array.","category":"page"},{"location":"#Contributing-and-Support","page":"Home","title":"Contributing and Support","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you would like to contribute, feel free to open a pull request. If you want to discuss something before contributing, head over to discussions and join or open a new topic. If you're having problems with something, please open an issue.","category":"page"}]
}
